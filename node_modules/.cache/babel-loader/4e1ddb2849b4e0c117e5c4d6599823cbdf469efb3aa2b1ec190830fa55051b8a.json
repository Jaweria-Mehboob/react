{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nconst useHttp = (requestConfig, applyData) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const SendRequest = async taskText => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig, {\n        method: requestConfig.method ? requestConfig.message : \"GET\",\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.stringify(requestConfig.body) ? requestConfig.stringify(requestConfig.body) : null\n      });\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  };\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n};\n_s(useHttp, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\nexport default useHttp;","map":{"version":3,"names":["useState","useHttp","requestConfig","applyData","isLoading","setIsLoading","error","setError","SendRequest","taskText","response","fetch","method","message","headers","body","stringify","ok","Error","data","json","err","sendRequest"],"sources":["D:/Practice/React/04-onwards-to-a-more-realistic-example/src/hooks/use-http.jsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useHttp = (requestConfig, applyData) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const SendRequest = async (taskText) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(requestConfig, {\r\n        method: requestConfig.method ? requestConfig.message : \"GET\",\r\n        headers: requestConfig.headers ? requestConfig.headers : {},\r\n        body: requestConfig.stringify(requestConfig.body)\r\n          ? requestConfig.stringify(requestConfig.body)\r\n          : null,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Request failed!\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      applyData(data);\r\n    } catch (err) {\r\n      setError(err.message || \"Something went wrong!\");\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return { isLoading, error, sendRequest };\r\n};\r\n\r\nexport default useHttp;\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,OAAO,GAAG,CAACC,aAAa,EAAEC,SAAS,KAAK;EAAA;EAC5C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMQ,WAAW,GAAG,MAAOC,QAAQ,IAAK;IACtCJ,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACT,aAAa,EAAE;QAC1CU,MAAM,EAAEV,aAAa,CAACU,MAAM,GAAGV,aAAa,CAACW,OAAO,GAAG,KAAK;QAC5DC,OAAO,EAAEZ,aAAa,CAACY,OAAO,GAAGZ,aAAa,CAACY,OAAO,GAAG,CAAC,CAAC;QAC3DC,IAAI,EAAEb,aAAa,CAACc,SAAS,CAACd,aAAa,CAACa,IAAI,CAAC,GAC7Cb,aAAa,CAACc,SAAS,CAACd,aAAa,CAACa,IAAI,CAAC,GAC3C;MACN,CAAC,CAAC;MAEF,IAAI,CAACL,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,EAAE;MAClCjB,SAAS,CAACgB,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZd,QAAQ,CAACc,GAAG,CAACR,OAAO,IAAI,uBAAuB,CAAC;IAClD;IACAR,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,OAAO;IAAED,SAAS;IAAEE,KAAK;IAAEgB;EAAY,CAAC;AAC1C,CAAC;AAAC,GA7BIrB,OAAO;AA+Bb,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}